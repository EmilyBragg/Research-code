[sobolQRNG.exe] starting...

> number of vectors = 100000
> number of dimensions = 100
MapSMtoCores undefined SMversion 3.5!
Allocating CPU memory...
Allocating GPU memory...
Initializing direction numbers...
Copying direction numbers to device...
Executing QRNG on GPU...
Gsamples/s: 0.386415
Reading results from GPU...

Executing QRNG on CPU...
Gsamples/s: 0.0411115
Checking results...
L1-Error: 0
Shutting down...
[sobolQRNG.exe] test results...
PASSED

> exiting in 3 seconds: 3...2...1...done!

======== Warning: Metric "branch_efficiency" cannot be found on device 0.
==2912== NVPROF is profiling process 2912, command: sobolQRNG.exe
==2912== Warning: Some kernel(s) will be replayed on device 0 in order to collect all events/metrics.
==2912== Profiling application: sobolQRNG.exe
==2912== Profiling result:
==2912== Metric result:
"Device","Kernel","Invocations","Metric Name","Metric Description","Min","Max","Avg"
"GeForce GTX 780 (0)","sobolGPU_kernel(unsigned int, unsigned int, unsigned int*, float*)",1,"inst_replay_overhead","Instruction Replay Overhead",0.000288,0.000288,0.000288
"GeForce GTX 780 (0)","sobolGPU_kernel(unsigned int, unsigned int, unsigned int*, float*)",1,"global_cache_replay_overhead","Global Memory Cache Replay Overhead",0.000000,0.000000,0.000000
"GeForce GTX 780 (0)","sobolGPU_kernel(unsigned int, unsigned int, unsigned int*, float*)",1,"local_replay_overhead","Local Memory Cache Replay Overhead",0.000000,0.000000,0.000000
"GeForce GTX 780 (0)","sobolGPU_kernel(unsigned int, unsigned int, unsigned int*, float*)",1,"cf_executed","Executed Control-Flow Instructions",314700,314700,314700
"GeForce GTX 780 (0)","sobolGPU_kernel(unsigned int, unsigned int, unsigned int*, float*)",1,"inst_executed","Instructions Executed",5640400,5640400,5640400
"GeForce GTX 780 (0)","sobolGPU_kernel(unsigned int, unsigned int, unsigned int*, float*)",1,"inst_issued","Instructions Issued",5642024,5642024,5642024
"GeForce GTX 780 (0)","sobolGPU_kernel(unsigned int, unsigned int, unsigned int*, float*)",1,"atomic_replay_overhead","Atomic Replay Overhead",0.000000,0.000000,0.000000
